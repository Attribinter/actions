name: Create GitHub Release
description: Creates a GitHub Release containing NuGet packages

inputs:
  token:
    description: The token used to publish the GitHub Release
    required: true

runs:
  using: composite

  steps:

    - name: Checkout
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: 8.0.x

    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.11.0
      with:
        versionSpec: 5.x

    - name: Execute GitVersion
      id: gitVersion
      uses: gittools/actions/gitversion/execute@v0.11.0

    - name: Restore .NET
      shell: bash
      run: dotnet restore

    - name: Build .NET Projects
      shell: bash
      run: dotnet build --no-restore -c Release /p:VersionPrefix="${{ steps.gitVersion.outputs.majorMinorPatch }}" /p:VersionSuffix="${{ steps.gitVersion.outputs.preReleaseTag }}"

    - name: Create NuGet Packages
      shell: bash
      run: dotnet pack --no-build /p:PackageVersion="${{ steps.gitVersion.outputs.SemVer }}"

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        files=$(find . -type f \( -name "*.nupkg" -o -name "*.snupkg" \))

        if [ -n "$files" ]; then
          gh config set prompt disabled
          gh release create "v${{ steps.gitVersion.outputs.SemVer }}" $(echo $files) --title "v${{ steps.gitVersion.outputs.SemVer }}" --repo "${{ github.repository }}"
        else
          echo "No NuGet Packages detected, not creating GitHub Release."
        fi